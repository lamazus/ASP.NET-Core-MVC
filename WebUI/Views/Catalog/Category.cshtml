@using WebUI.Models
@using Domain.Entities
@model CatalogPageVm

@{
    ViewData["Title"] = "Каталог";
}
<div class="row">
    <!--Боковая панель-->
    <div class="col-3">
        <!-- Навигация по категориям -->
        <div class="list-group">
            @foreach(Category c in ViewBag.Categories)
            {
                if (c.CategoryId == ViewBag.SelectedCategory.CategoryId)
                {
                    <a asp-action="Category" asp-route-id="@c.CategoryId" class="list-group-item list-group-item-action active">@c.Name</a>
                }
                else
                {
                    <a asp-action="Category" asp-route-id="@c.CategoryId" class="list-group-item list-group-item-action">@c.Name</a>
                }
            }
            <hr/>
        </div>
        <!--Конец навигации-->
        <!--Фильтрация вывода-->
        <div>
            @using(Html.BeginForm("Filter", "Catalog", FormMethod.Get))
            {
                <input type="text" name="categoryId" value="@ViewBag.SelectedCategory.CategoryId" hidden/>
                @await Html.PartialAsync("_FiltersForForm")

            }
        </div>
        <!--Конец фильтрации-->
    </div>
<!--Конец боковой панели-->
        <div class="container-flex text-center col-9">
            <!--Сортировка-->
                 @using(Html.BeginForm("Sort", "Catalog", FormMethod.Get, new { @products = ViewBag.Products}))
                {
                    <input type="text" name="categoryId" value="@ViewBag.SelectedCategory.CategoryId" hidden/>
                        @await Html.PartialAsync("_SortMethodsInForm");
                }
            <!--Конец сортировки-->
        
    <!--Список карточек товаров-->
        @await Component.InvokeAsync("ProductCards", new { products = Model.Products })
    <!--Конец списка товаров-->

<!-- Вывод страниц каталога -->
    <nav>
        <ul class="pagination">
            @if(!Model.Pvm.HasPreviousPase)
            {
            <li class="page-item disabled">
                <a class="page-link">Назад</a>
            </li>
            } 
            else
            {
            <li class="page-item">
                <a class="page-link" asp-action="Category" asp-route-id="@ViewBag.SelectedCategory.CategoryId" asp-route-page="@(Model.Pvm.CurrentPage-1)">Назад</a>
            </li>
            }

            @for(int i = 1; i<=Model.Pvm.TotalPages; i++)
            {
                if(Model.Pvm.CurrentPage == i)
                {
                <li class="page item"><a class="page-link active" asp-action="Category" asp-route-id="@ViewBag.SelectedCategory.CategoryId" asp-route-page="@i">@i</a></li>
                }
                else
                {
                <li class="page item"><a asp-action="Category" asp-route-id="@ViewBag.SelectedCategory.CategoryId" asp-route-page="@i" class="page-link">@i</a></li>
                }
            }

        @if(!Model.Pvm.HasNextPage){
            <li class="page-item disabled">
                <a class="page-link" href="#">Вперёд</a>
            </li>
        } 
        else
        {
            <li class="page-item">
                <a class="page-link" asp-action="Category" asp-route-id="@ViewBag.SelectedCategory.CategoryId" asp-route-page="@(Model.Pvm.CurrentPage+1)">Вперёд</a>
            </li>
        }
        </ul>
    </nav>
<!--Конец вывода страниц-->
    </div>
</div>
